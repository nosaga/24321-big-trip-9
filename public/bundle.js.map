{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/components/card-edit.js","webpack:///./src/components/card-route.js","webpack:///./src/components/cards.js","webpack:///./src/components/controls.js","webpack:///./src/components/filters.js","webpack:///./src/components/sorting.js","webpack:///./src/constants.js","webpack:///./src/main.js","webpack:///./src/mocks/card-route.js","webpack:///./src/mocks/card.js","webpack:///./src/mocks/controls.js","webpack:///./src/mocks/filters.js","webpack:///./src/mocks/sorting.js","webpack:///./src/utils.js"],"names":[],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/main.js\");\n","import {transfer} from \"../constants\";\nimport {createElement} from \"../utils\";\n\n\nexport class CardEdit {\n  constructor({tripRoute, activity, description, options, photos, transfer}) {\n    this._tripRoute = tripRoute;\n    this._transfer  = transfer;\n    this._activity = activity;\n    this._description = description;\n    this._options = options;\n    this._photos = photos;\n  }\n\n  getElement() {\n    if (!this._element) {\n      this._element = createElement(this.getTemplate());\n    }\n\n    return this._element;\n  }\n\n  removeElement() {\n    this._element = null;\n  }\n\n  getTemplate () {\n    return `\n  <form class=\"event  event--edit\" action=\"#\" method=\"post\">\n    <header class=\"event__header\">\n      ${this._tripRoute.map((trip) => `\n      <div class=\"event__type-wrapper\">\n        <label class=\"event__type  event__type-btn\" for=\"event-type-toggle-1\">\n          <span class=\"visually-hidden\">Choose event type</span>\n          <img class=\"event__type-icon\" width=\"17\" height=\"17\" src=\"${trip.icon}\" alt=\"Event type icon\">\n        </label>\n        <input class=\"event__type-toggle  visually-hidden\" id=\"event-type-toggle-1\" type=\"checkbox\">\n  \n        <div class=\"event__type-list\">\n          <fieldset class=\"event__type-group\">\n            <legend class=\"visually-hidden\">Transfer</legend>\n              ${this._transfer.map((option) => `\n              <div class=\"event__type-item\">\n                <input id=\"event-type-${option}-1\" class=\"event__type-input  visually-hidden\" type=\"radio\" name=\"event-type\" value=\"${option}\">\n                <label class=\"event__type-label  event__type-label--${option.toLowerCase()}\" for=\"event-type-${option}-1\">${option}</label>\n              </div>`).join(``)}\n          </fieldset>\n  \n          <fieldset class=\"event__type-group\">\n            <legend class=\"visually-hidden\">Activity</legend>\n            ${this._activity.map((act) => `\n              <div class=\"event__type-item\">\n                <input id=\"event-type-${act}-1\" class=\"event__type-input  visually-hidden\" type=\"radio\" name=\"event-type\" value=\"${act}\">\n                <label class=\"event__type-label  event__type-label--${act.toLowerCase()}\" for=\"event-type-check-in-1\">${act}</label>\n              </div>\n            `).join(``)}\n          </fieldset>\n        </div>\n      </div>`)[0]}\n      <div class=\"event__field-group  event__field-group--destination\">\n        ${this._tripRoute.map((point) => `\n          <label class=\"event__label  event__type-output\" for=\"event-destination-1\">\n            ${point.type} to\n          </label>\n          <input class=\"event__input  event__input--destination\" id=\"event-destination-1\" type=\"text\" name=\"event-destination\" value=\"${point.point}\" list=\"destination-list-1\">\n         `)[[Math.floor(Math.random() * this._tripRoute.length)]]}\n        <datalist id=\"destination-list-1\">\n          ${this._tripRoute.map((points) => `\n            <option value=\"${points.point}\"></option>\n          `).join(``)}\n        </datalist>\n      </div>\n      <div class=\"event__field-group  event__field-group--time\">\n        ${this._tripRoute.map((date) => `\n          <label class=\"visually-hidden\" for=\"event-start-time-1\">\n            From\n          </label>\n          <input class=\"event__input  event__input--time\" id=\"event-start-time-1\" type=\"text\" name=\"event-start-time\" value=\"${date.startDate.getDate()}/${date.startDate.getMonth()}/${date.startDate.getFullYear()} ${date.startTime[0]}:${date.startTime[1]}\">\n          —\n          <label class=\"visually-hidden\" for=\"event-end-time-1\">\n            To\n          </label>\n          <input class=\"event__input  event__input--time\" id=\"event-end-time-1\" type=\"text\" name=\"event-end-time\" value=\"${date.endDate.getDate()}/${date.endDate.getMonth()}/${date.endDate.getFullYear()} ${date.endTime[0]}:${date.endTime[0]}\">\n          `)[Math.floor(Math.random() * this._tripRoute.length)]}\n      </div>\n      <div class=\"event__field-group  event__field-group--price\">\n        <label class=\"event__label\" for=\"event-price-1\">\n          <span class=\"visually-hidden\">Price</span>\n          €\n        </label>\n        ${this._tripRoute.map((price) => `\n          <input class=\"event__input  event__input--price\" id=\"event-price-1\" type=\"text\" name=\"event-price\" value=\"${price.price}\">\n          `)[Math.floor(Math.random() * this._tripRoute.length)]}\n      </div>\n      <button class=\"event__save-btn  btn  btn--blue\" type=\"submit\">Save</button>\n      <button class=\"event__reset-btn\" type=\"reset\">Delete</button>\n      <input id=\"event-favorite-1\" class=\"event__favorite-checkbox  visually-hidden\" type=\"checkbox\" name=\"event-favorite\" checked=\"\">\n      <label class=\"event__favorite-btn\" for=\"event-favorite-1\">\n        <span class=\"visually-hidden\">Add to favorite</span>\n        <svg class=\"event__favorite-icon\" width=\"28\" height=\"28\" viewBox=\"0 0 28 28\">\n          <path d=\"M14 21l-8.22899 4.3262 1.57159-9.1631L.685209 9.67376 9.8855 8.33688 14 0l4.1145 8.33688 9.2003 1.33688-6.6574 6.48934 1.5716 9.1631L14 21z\"></path>\n        </svg>\n      </label>\n      <button class=\"event__rollup-btn\" type=\"button\">\n        <span class=\"visually-hidden\">Open event</span>\n      </button>\n    </header>\n  \n    <section class=\"event__details\">\n      <section class=\"event__section  event__section--offers\">\n        <h3 class=\"event__section-title  event__section-title--offers\">Offers</h3>\n          <div class=\"event__available-offers\">\n          ${this._options.map((it) => `\n            <div class=\"event__offer-selector\">\n              <input class=\"event__offer-checkbox  visually-hidden\" id=\"event-offer-${it.value}-1\" type=\"checkbox\" name=\"event-offer-${it.value}\" checked=\"${it.isChecked ? `checked` : ``}\">\n              <label class=\"event__offer-label\" for=\"event-offer-${it.value}-1\">\n                <span class=\"event__offer-title\">${it.type}</span>\n                +\n                €&nbsp;<span class=\"event__offer-price\">${it.price}</span>\n              </label>\n            </div>`).join(``)}\n          </div>\n      </section>\n  \n      <section class=\"event__section  event__section--destination\">\n        <h3 class=\"event__section-title  event__section-title--destination\">Destination</h3>\n        <p class=\"event__destination-description\">${this._description}</p>\n  \n        <div class=\"event__photos-container\">\n          <div class=\"event__photos-tape\">\n           ${this._photos.map((photo) => `\n            <img class=\"event__photo\" src=\"${photo} + ${Math.random()}\" alt=\"Event photo\">\n            `).join(``)} \n           </div>\n        </div>\n      </section>\n    </section>\n  </form>`;\n  }\n}\n","import {createElement} from \"../utils\";\n\nexport class CreateCardRoute {\n  constructor({cityStart, cityTransfer, cityEnd, startMonth, startDate, endDate}) {\n    this._citySart = cityStart;\n    this._cityTransfer = cityTransfer;\n    this._cityEnd = cityEnd;\n    this._startMonth = startMonth;\n    this._startDate = startDate;\n    this._endDate = endDate;\n  }\n\n  getElement() {\n    if (!this._element) {\n      this._element = createElement(this.getTemplate());\n    }\n\n    return this._element;\n  }\n\n  removeElement() {\n    this._element = null;\n  }\n\n  getTemplate() {\n    return `\n    <div class=\"trip-info__main\">\n      <h1 class=\"trip-info__title\">${this._cityStart} &mdash; ${this._cityTransfer !== `` ? `...&mdash;` : ``}   ${this._cityEnd}</h1>\n      <p class=\"trip-info__dates\">${this._startMonth} ${this._startDate.getUTCDate()}&nbsp;—&nbsp;${this._endDate.getUTCDate()}</p>\n    </div>\n  `;\n  }\n}\n\n\n","import {createElement} from \"../utils\";\n\nexport class Card {\n  constructor({tripRoute, options}) {\n    this._tripRoute = tripRoute;\n    this._options = options;\n  }\n\n  getElement() {\n    if (!this._element) {\n      this._element = createElement(this.getTemplate());\n    }\n\n    return this._element;\n  }\n\n  removeElement() {\n    this._element = null;\n  }\n\n  getTemplate() {\n    return ` \n    ${this._tripRoute.map((trip) => `\n    <li class=\"trip-events__item\">\n    <div class=\"event\">\n      <div class=\"event__type\">\n        <img class=\"event__type-icon\" width=\"42\" height=\"42\" src=\"${trip.icon}\" alt=\"Event type icon\">\n      </div>\n      <h3 class=\"event__title\">${trip.type} ${trip.point}</h3>\n      <div class=\"event__schedule\">\n        <p class=\"event__time\">\n          <time class=\"event__start-time\" datetime=\"2019-03-18T10:30\">${trip.startTime[0]}:${trip.startTime[1]}</time>\n          —\n          <time class=\"event__end-time\" datetime=\"2019-03-18T11:00\">${trip.endTime[0]}:${(trip.endTime[1])}</time>\n        </p>\n        <p class=\"event__duration\">${trip.durationHours}H ${trip.durationMinutes}M</p>\n      </div>\n      <p class=\"event__price\">\n        €&nbsp;<span class=\"event__price-value\">${trip.price}</span>\n      </p>\n      <h4 class=\"visually-hidden\">Offers:</h4>\n      <ul class=\"event__selected-offers\">\n      ${this._options.map((option) => ` \n        <li class=\"event__offer\">\n          <span class=\"event__offer-title\">${option.type}</span>\n          +\n          €&nbsp;<span class=\"event__offer-price\">${option.price}</span>\n         </li>\n         `)[Math.floor(Math.random() * this._options.length)]}\n      </ul>\n      <button class=\"event__rollup-btn\" type=\"button\">\n        <span class=\"visually-hidden\">Open event</span>\n      </button>\n    </div>\n    </li>\n    `).splice(0, 3).join(``)}\n  `;}\n}\n\n","import {createElement} from \"../utils\";\n\nexport class CreateControls {\n  constructor(controls) {\n    this._controls = controls;\n  }\n\n  getElement() {\n    if (!this._element) {\n      this._element = createElement(this.getTemplate());\n    }\n\n    return this._element;\n  }\n\n  removeElement() {\n    this._element = null;\n  }\n\n  getTemplate() {\n    return `\n      <nav class=\"trip-controls__trip-tabs  trip-tabs\">\n        ${this._controls.map((control) => `\n          <a class=\"trip-tabs__btn  trip-tabs__btn--active\" href=\"#\">${control}</a>\n        `).join(``)}\n      </nav>\n    `\n  }\n}\n","import {createElement} from \"../utils\";\n\nexport class CreateFilters {\n  constructor(filters) {\n    this._filters = filters;\n  }\n\n  getElement() {\n    if (!this._element) {\n      this._element = createElement(this.getTemplate());\n    }\n\n    return this._element;\n  }\n\n  removeElement() {\n    this._element = null;\n  }\n\n  getTemplate() {\n    return `\n      <form class=\"trip-filters\" action=\"#\" method=\"get\">${this._filters.map((filter) => `\n        <div class=\"trip-filters__filter\">\n          <input id=\"filter-${filter.filter}\" class=\"trip-filters__filter-input  visually-hidden\" type=\"radio\" name=\"trip-filter\" value=\"${filter.filter.toLowerCase()}\" ${filter.isChecked ? 'checked' : ''}>\n          <label class=\"trip-filters__filter-label\" for=\"filter-${filter.filter}\">${filter.filter}</label>\n        </div>\n        `).join(``)}\n      </form>\n    `\n  }\n}\n","import {createElement} from \"../utils\";\n\nexport class CreateSorting {\n  constructor(sorting) {\n    this._sorting = sorting;\n  }\n\n  getElement() {\n    if (!this._element) {\n      this._element = createElement(this.getTemplate());\n    }\n\n    return this._element;\n  }\n\n  removeElement() {\n    this._element = null;\n  }\n\n  getTemplate() {\n    return `\n      <form class=\"trip-events__trip-sort  trip-sort\" action=\"#\" method=\"get\">\n        <span class=\"trip-sort__item  trip-sort__item--day\">Day</span>\n        ${this._sorting.map((sort) => `\n          <div class=\"trip-sort__item  trip-sort__item--${sort.sorting.toLowerCase()}\">\n            <input id=\"sort-${sort.sorting}\" class=\"trip-sort__input  visually-hidden\" type=\"radio\" name=\"trip-sort\" value=\"sort-${sort.sorting}\" ${sort.isChecked ? 'checked' : ''}>\n            <label class=\"trip-sort__btn\" for=\"sort-${sort.sorting}\">${sort.sorting}\n            <svg class=\"trip-sort__direction-icon\" width=\"8\" height=\"10\" viewBox=\"0 0 8 10\">\n                <path d=\"M2.888 4.852V9.694H5.588V4.852L7.91 5.068L4.238 0.00999987L0.548 5.068L2.888 4.852Z\"/>\n              </svg>\n            </label>\n          </div>`).join(``)}\n        <span class=\"trip-sort__item  trip-sort__item--offers\">Offers</span>\n    </form>\n    `\n  }\n}\n","const tripInfo = document.querySelector(`.trip-main__trip-info`);\nconst tripControls = document.querySelector(`.trip-main__trip-controls`);\nconst tripEvents = document.querySelector(`.trip-events`);\nconst tripEventsList = document.querySelector(`.trip-events__list`);\n\nconst partialPath = `img/icons/`;\nconst cities = [`Helsinki`, `Stockholm`, `Amsterdam`, `Airport`];\nconst sightseeings = [`Natural History Museum`, `Theater`, `Park`];\nconst activity = [`Sightseeing`, `Restaurant`, `Check-in`];\nconst transfer = [`Taxi`, `Bus`, `Train`, `Ship`, `Transport`, `Drive`, `Flight`];\nconst monthNames = [`January`, `February`, `March`, `April`, `May`, `June`, `July`, `August`, `September`, `October`, `November`, `December`];\nconst startMonth = new Date(2020, 5, 1, 8, 30, 0, 0).getMonth();\nconst startDate = new Date(2020, 5, 1, 8, 30, 0, 0);\nconst endDate = new Date(2020, 5, 8, 0, 30, 0, 0);\nconst startTimeHours = new Date(2020, 5, 1, 8, 30, 0, 0).getHours();\nconst startTimeMinutes = new Date(2020, 5, 1, 8, 30, 0, 0).getMinutes();\nconst photosArray = new Array(5).fill(``);\n\nexport {\n  tripInfo,\n  tripControls,\n  tripEvents,\n  tripEventsList,\n  partialPath,\n  cities,\n  sightseeings,\n  activity,\n  transfer,\n  startMonth,\n  startDate,\n  endDate,\n  startTimeHours,\n  startTimeMinutes,\n  monthNames,\n  photosArray,\n};\n","import {tripInfo, tripControls, tripEvents, tripEventsList} from './constants'\nimport {render, Position} from './utils';\n\nimport {card} from './mocks/card';\nimport {filters} from './mocks/filters';\nimport {getCardRoute} from './mocks/card-route';\nimport {controls} from './mocks/controls';\nimport {sorting} from './mocks/sorting';\n\nimport {Card} from './components/cards';\nimport {CardEdit} from './components/card-edit';\nimport {CreateCardRoute} from './components/card-route';\nimport {CreateControls} from './components/controls';\nimport {CreateFilters} from './components/filters';\nimport {CreateSorting} from './components/sorting';\n\n\nconst renderCards = (cardMock) => {\n  const card = new Card(cardMock);\n  const cardEdit = new CardEdit(cardMock);\n\n  render(tripEventsList, card.getElement(), Position.BEFOREEND);\n\n  card.getElement()\n    .querySelectorAll(`.event__rollup-btn`).forEach((btn) =>\n      btn.addEventListener(`click`, () => {\n        tripEventsList.replaceChild(cardEdit.getElement(), card.getElement())\n    }));\n  cardEdit.getElement()\n    .querySelectorAll(`form`).forEach((form) =>\n      form.addEventListener(`click`, () => {\n        tripEventsList.replaceChild(card.getElement(), cardEdit.getElement())\n    }))\n};\n\nconst renderRoute = (route) => {\n  const cardRoute = new CreateCardRoute(route);\n\n  render(tripInfo, cardRoute.getElement(), Position.AFTERBEGIN);\n};\n\nconst renderControls = (controls) => {\n  const controlRoute = new CreateControls(controls);\n\n  render(tripControls, controlRoute.getElement(), Position.AFTERBEGIN);\n};\n\nconst renderFilters = (filters) => {\n  const filtersRoute = new CreateFilters(filters);\n\n  render(tripControls, filtersRoute.getElement(), Position.BEFOREEND);\n};\n\nconst renderSorting = (sorting) => {\n  const sortingRoute = new CreateSorting(sorting);\n\n  render(tripEvents, sortingRoute.getElement(), Position.AFTERBEGIN);\n};\n\n\nrenderCards(card);\nrenderRoute(getCardRoute());\nrenderControls(controls);\nrenderFilters(filters);\nrenderSorting(sorting);\n","import {getMonth} from '../utils';\nimport {startDate, endDate} from \"../constants\";\n\nexport const getCardRoute = () => ({\n  cityStart: [`Geneva`, `Chamonix`, `Amsterdam`, `Brussels`, `Stockholm`][Math.floor(Math.random() * 5)],\n  cityTransfer: [``, `Chamonix`, ``, `Brussels`, `Stockholm`][Math.floor(Math.random() * 5)],\n  cityEnd: [`Geneva`, `Chamonix`, `Amsterdam`, `Brussels`, `Stockholm`][Math.floor(Math.random() * 5)],\n  startMonth: getMonth(),\n  startDate: startDate,\n  endDate: endDate\n});\n","import {getDuration} from '../utils';\nimport {partialPath, cities, sightseeings, startTimeHours, startTimeMinutes, startDate, endDate, activity, transfer, photosArray} from '../constants';\n\nexport const card = {\n  tripRoute: [\n    {\n      type: `Taxi`,\n      icon: partialPath + `taxi.png`,\n      point: `Airport`,\n      price: Math.floor(Math.random() * 50),\n      startTime: [startTimeHours, startTimeMinutes],\n      endTime: [startTimeHours + 1, startTimeMinutes + 30],\n      durationHours: getDuration(startTimeHours, startTimeHours + 1),\n      durationMinutes: getDuration(startTimeMinutes, startTimeMinutes + 30),\n      startDate: startDate,\n      endDate: endDate\n    },\n    {\n      type: `Flight`,\n      icon: partialPath + `flight.png`,\n      point: cities[Math.floor(Math.random() * cities.length)],\n      price: Math.floor(Math.random() * 500),\n      startTime: [startTimeHours + 1, startTimeMinutes + 30],\n      endTime: [startTimeHours + 3, startTimeMinutes + 30],\n      durationHours: getDuration(startTimeHours + 1, startTimeHours + 3),\n      durationMinutes: getDuration(startTimeMinutes + 30, startTimeMinutes + 30),\n      startDate: startDate,\n      endDate: endDate\n    },\n    {\n      type: `Drive`,\n      icon: partialPath + `bus.png`,\n      point: cities[Math.floor(Math.random() * cities.length)],\n      price: Math.floor(Math.random() * 50),\n      startTime: [startTimeHours + 3, startTimeMinutes + 30],\n      endTime: [startTimeHours + 3, startTimeMinutes + 30],\n      durationHours: getDuration(startTimeHours + 1, startTimeHours + 3),\n      durationMinutes: getDuration(startTimeMinutes + 30, startTimeMinutes + 30),\n      startDate: startDate,\n      endDate: endDate\n    },\n    {\n      type: `Check in`,\n      icon: partialPath + `check-in.png`,\n      point: `hotel`,\n      price: Math.floor(Math.random() * 300),\n      startTime: [startTimeHours + 3, startTimeMinutes + 30],\n      endTime: [startTimeHours + 48, startTimeMinutes + 30],\n      durationHours: getDuration(startTimeHours + 3, startTimeHours + 48),\n      durationMinutes: getDuration(startTimeMinutes + 30, startTimeMinutes + 30),\n      startDate: startDate,\n      endDate: endDate\n    },\n    {\n      type: `Sightseeing`,\n      icon: partialPath + `sightseeing.png`,\n      point: sightseeings[Math.floor(Math.random() * sightseeings.length)],\n      price: Math.floor(Math.random() * 10),\n      startTime: [startTimeHours + 4, startTimeMinutes + 30],\n      endTime: [startTimeHours + 6, startTimeMinutes + 30],\n      durationHours: getDuration(startTimeHours + 1, startTimeHours + 3),\n      durationMinutes: getDuration(startTimeMinutes + 30, startTimeMinutes + 30),\n      startDate: startDate,\n      endDate: endDate\n    },\n    {\n      type: `Restaurant`,\n      icon: partialPath + `restaurant.png`,\n      point: `hotel`,\n      price: Math.floor(Math.random() * 60),\n      startTime: [startTimeHours + 5, startTimeMinutes + 30],\n      endTime: [startTimeHours + 7, startTimeMinutes + 30],\n      durationHours: getDuration(startTimeHours + 1, startTimeHours + 3),\n      durationMinutes: getDuration(startTimeMinutes + 30, startTimeMinutes + 30),\n      startDate: startDate,\n      endDate: endDate\n    },\n    {\n      type: `Ship`,\n      icon: partialPath + `ship.png`,\n      point: cities[Math.floor(Math.random() * cities.length)],\n      price: Math.floor(Math.random() * 40),\n      startTime: [startTimeHours + 6, startTimeMinutes + 30],\n      endTime: [startTimeHours + 8, startTimeMinutes + 30],\n      durationHours: getDuration(startTimeHours + 1, startTimeHours + 3),\n      durationMinutes: getDuration(startTimeMinutes + 30, startTimeMinutes + 30),\n      startDate: startDate,\n      endDate: endDate\n    },\n    {\n      type: `Bus`,\n      icon: partialPath + `bus.png`,\n      point: sightseeings[Math.floor(Math.random() * sightseeings.length)],\n      price: Math.floor(Math.random() * 50),\n      startTime: [startTimeHours + 3, startTimeMinutes + 30],\n      endTime: [startTimeHours + 3, startTimeMinutes + 30],\n      durationHours: getDuration(startTimeHours + 3, startTimeHours + 3),\n      durationMinutes: getDuration(startTimeMinutes + 30, startTimeMinutes + 30),\n      startDate: startDate,\n      endDate: endDate\n    },\n    {\n      type: `Train`,\n      icon: partialPath + `train.png`,\n      point: cities[Math.floor(Math.random() * cities.length)],\n      price: Math.floor(Math.random() * 30),\n      startTime: [startTimeHours + 1, startTimeMinutes + 30],\n      endTime: [startTimeHours + 3, startTimeMinutes + 30],\n      durationHours: getDuration(startTimeHours + 1, startTimeHours + 3),\n      durationMinutes: getDuration(startTimeMinutes + 30, startTimeMinutes + 30),\n      startDate: startDate,\n      endDate: endDate\n    }\n\n  ],\n\n  activity: activity,\n  transfer: transfer,\n\n\n  options: [\n    {\n      type: `Add luggage`,\n      value: `luggage`,\n      price: Math.floor(Math.random() * 250),\n      isChecked: Boolean(Math.round(Math.random()))\n    },\n    {\n      type: `Switch to comfort class`,\n      value: `class`,\n      price: Math.floor(Math.random() * 250),\n      isChecked: Boolean(Math.round(Math.random()))\n    },\n    {\n      type: `Add meal`,\n      value: `meal`,\n      price: Math.floor(Math.random() * 5),\n      isChecked: Boolean(Math.round(Math.random()))\n    },\n    {\n      type: `Choose seats`,\n      value: `seats`,\n      price: Math.floor(Math.random() * 30),\n      isChecked: Boolean(Math.round(Math.random()))\n    }\n  ],\n\n\n  photos: photosArray.map(() => `http://picsum.photos/300/150?r=`),\n\n  description: [\n    `Lorem ipsum dolor sit amet, consectetur adipiscing elit. Cras aliquet varius magna, non porta ligula feugiat eget.`,\n    `Fusce tristique felis at fermentum pharetra.`,\n    `Aliquam id orci ut lectus varius viverra.`,\n    `Nullam nunc ex, convallis sed finibus eget, sollicitudin eget ante.`,\n    `Phasellus eros mauris, condimentum sed nibh vitae, sodales efficitur ipsum. Sed blandit, eros vel aliquam faucibus, purus ex euismod diam, eu luctus nunc ante ut dui.`,\n    `Sed sed nisi sed augue convallis suscipit in sed felis.`,\n    `Aliquam erat volutpat.`,\n    `unc fermentum tortor ac porta dapibus.`,\n    `In rutrum ac purus sit amet tempus.`\n  ][Math.floor(Math.random() * 3)],\n};\n","export const controls = [`Table`, `Stats`];\n\n","export const filters = [\n  {\n    filter: `Everything`,\n    isChecked: Boolean(Math.round(Math.random()))\n  },\n  {\n    filter: `Future`,\n    isChecked: Boolean(Math.round(Math.random()))\n\n  },\n  {\n    filter: `Past`,\n    isChecked: Boolean(Math.round(Math.random()))\n\n  }\n];\n","export const sorting = [\n  {\n    sorting: `Event`,\n    isChecked: Boolean(Math.round(Math.random()))\n  },\n  {\n    sorting:  `Time`,\n    isChecked: Boolean(Math.round(Math.random()))\n  },\n  {\n    sorting: `Price`,\n    isChecked: Boolean(Math.round(Math.random()))\n  }\n];\n","import {monthNames} from './constants';\nimport {startMonth} from './constants';\n\nconst getDuration = (start, end) => end - start;\n\nconst getMonth = () => monthNames[startMonth];\n\nfunction setActiveStatuses(options = []) {\n  const maxActiveOptionsNumber = 2;\n  const activeOptionsNumber = Math.floor(Math.random() * (maxActiveOptionsNumber + 1));\n\n  if (activeOptionsNumber) {\n    for (let i = 0; i < activeOptionsNumber; i++) {\n      options[Math.floor(Math.random() * options.length)].isChecked = true;\n    }\n  }\n}\n\nconst Position = {\n  AFTERBEGIN: `afterbegin`,\n  BEFOREEND: `beforeend`\n};\n\nconst createElement = (template) => {\n  const newElement = document.createElement(`div`);\n  newElement.innerHTML = template;\n  return newElement;\n};\n\n// Рендер и анрендер для компонент\nconst render = (container, element, place) => {\n  switch (place) {\n    case Position.AFTERBEGIN:\n      container.prepend(element);\n      break;\n    case Position.BEFOREEND:\n      container.append(element);\n      break;\n  }\n};\n\nconst unrender = (element) => {\n  if (element) {\n    element.remove();\n  }\n};\n\nexport {\n  getDuration,\n  getMonth,\n  setActiveStatuses,\n  Position,\n  createElement,\n  render,\n  unrender\n}\n"],"sourceRoot":""}