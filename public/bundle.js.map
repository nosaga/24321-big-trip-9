{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/components/abstract-component.js","webpack:///./src/components/card-edit.js","webpack:///./src/components/card-new.js","webpack:///./src/components/card-route.js","webpack:///./src/components/cards.js","webpack:///./src/components/controls.js","webpack:///./src/components/filters.js","webpack:///./src/components/sorting.js","webpack:///./src/components/trip-cost.js","webpack:///./src/components/trip-events-container.js","webpack:///./src/components/trip-events-list.js","webpack:///./src/constants.js","webpack:///./src/controllers/cards-board.js","webpack:///./src/main.js","webpack:///./src/mocks/card-route.js","webpack:///./src/mocks/card.js","webpack:///./src/mocks/controls.js","webpack:///./src/mocks/filters.js","webpack:///./src/mocks/sorting.js","webpack:///./src/mocks/trip-cost.js","webpack:///./src/utils.js"],"names":[],"mappings":";QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;;AClFA;AAAA;AAAA;AAAuC;;AAEhC;AACP;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,sBAAsB,4DAAa;AACnC;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;AC1BA;AAAA;AAAA;AAAuD;;AAEhD,uBAAuB,qEAAiB;AAC/C,eAAe,4DAA4D;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,0EAA0E,UAAU;AACpF;AACA;;AAEA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,8CAA8C,OAAO,uFAAuF,OAAO;AACnJ,4EAA4E,qBAAqB,oBAAoB,OAAO,MAAM,OAAO;AACzI;AACA;;AAEA;AACA;AACA,kBAAkB;AAClB;AACA,4CAA4C,IAAI,uFAAuF,IAAI;AAC3I,0EAA0E,kBAAkB,gCAAgC,IAAI;AAChI;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA,kBAAkB,WAAW;AAC7B;AACA,4IAA4I,YAAY;AACxJ;AACA;AACA,gBAAgB;AAChB,iCAAiC,aAAa;AAC9C;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA,iIAAiI,yBAAyB,GAAG,0BAA0B,GAAG,6BAA6B,GAAG,kBAAkB,GAAG,kBAAkB;AACjQ;AACA;AACA;AACA;AACA,6HAA6H,uBAAuB,GAAG,wBAAwB,GAAG,2BAA2B,GAAG,gBAAgB,GAAG,gBAAgB;AACnP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd,0HAA0H,YAAY;AACtI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,0FAA0F,SAAS,wCAAwC,SAAS,IAAI,8BAA8B;AACtL,uEAAuE,SAAS;AAChF,uDAAuD,QAAQ;AAC/D;AACA,2BAA2B,mCAAmC,SAAS;AACvE;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,kBAAkB;;AAExE;AACA;AACA,eAAe;AACf,iDAAiD,MAAM,KAAK,cAAc;AAC1E,0B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC5HA;AAAA;AAAA;AAAuD;;AAEhD,0BAA0B,qEAAiB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AChHA;AAAA;AAAA;AAAuD;;AAEhD,8BAA8B,qEAAiB;AACtD,eAAe,iEAAiE;AAChF;A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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/main.js\");\n","import {createElement} from '../utils';\n\nexport class AbstractComponent {\n  constructor() {\n    if (new.target === AbstractComponent) {\n      throw new Error(`Can't instantiate AbstractComponent, only concrete one.`);\n    }\n\n    this._element = null;\n  }\n\n  getElement() {\n    if (!this._element) {\n      this._element = createElement(this.getTemplate());\n    }\n\n    return this._element;\n  }\n\n  removeElement() {\n    this._element = null;\n  }\n\n  getTemplate() {\n    throw new Error(`Abstract method not implemented: getTemplate`);\n  }\n}\n","import {AbstractComponent} from './abstract-component';\n\nexport class CardEdit extends AbstractComponent {\n  constructor({tripRoute, activity, description, options, photos, transfer}) {\n    super();\n    this._tripRoute = tripRoute;\n    this._transfer = transfer;\n    this._activity = activity;\n    this._description = description;\n    this._options = options;\n    this._photos = photos;\n  }\n\n\n  getTemplate() {\n    return `<form class=\"event  event--edit\" action=\"#\" method=\"post\">\n      <header class=\"event__header\">\n        ${this._tripRoute.map((trip) => `\n          <div class=\"event__type-wrapper\">\n            <label class=\"event__type  event__type-btn\" for=\"event-type-toggle-1\">\n              <span class=\"visually-hidden\">Choose event type</span>\n              <img class=\"event__type-icon\" width=\"17\" height=\"17\" src=\"${trip.icon}\" alt=\"Event type icon\">\n            </label>\n            <input class=\"event__type-toggle  visually-hidden\" id=\"event-type-toggle-1\" type=\"checkbox\">\n      \n            <div class=\"event__type-list\">\n              <fieldset class=\"event__type-group\">\n                <legend class=\"visually-hidden\">Transfer</legend>\n                  ${this._transfer.map((option) => `\n                    <div class=\"event__type-item\">\n                      <input id=\"event-type-${option}-1\" class=\"event__type-input  visually-hidden\" type=\"radio\" name=\"event-type\" value=\"${option}\">\n                      <label class=\"event__type-label  event__type-label--${option.toLowerCase()}\" for=\"event-type-${option}-1\">${option}</label>\n                    </div>`).join(``)}\n              </fieldset>\n      \n              <fieldset class=\"event__type-group\">\n                <legend class=\"visually-hidden\">Activity</legend>\n                ${this._activity.map((act) => `\n                  <div class=\"event__type-item\">\n                    <input id=\"event-type-${act}-1\" class=\"event__type-input  visually-hidden\" type=\"radio\" name=\"event-type\" value=\"${act}\">\n                    <label class=\"event__type-label  event__type-label--${act.toLowerCase()}\" for=\"event-type-check-in-1\">${act}</label>\n                  </div>\n                `).join(``)}\n              </fieldset>\n            </div>\n        </div>`)[0]}\n        <div class=\"event__field-group  event__field-group--destination\">\n          ${this._tripRoute.map((point) => `\n              <label class=\"event__label  event__type-output\" for=\"event-destination-1\">\n                ${point.type} to\n              </label>\n              <input class=\"event__input  event__input--destination\" id=\"event-destination-1\" type=\"text\" name=\"event-destination\" value=\"${point.point}\" list=\"destination-list-1\">\n             `)[[Math.floor(Math.random() * this._tripRoute.length)]]}\n            <datalist id=\"destination-list-1\">\n              ${this._tripRoute.map((points) => `\n                <option value=\"${points.point}\"></option>\n              `).join(``)}\n            </datalist>\n        </div>\n        <div class=\"event__field-group  event__field-group--time\">\n          ${this._tripRoute.map((date) => `\n            <label class=\"visually-hidden\" for=\"event-start-time-1\">\n              From\n            </label>\n            <input class=\"event__input  event__input--time\" id=\"event-start-time-1\" type=\"text\" name=\"event-start-time\" value=\"${date.startDate.getDate()}/${date.startDate.getMonth()}/${date.startDate.getFullYear()} ${date.startTime[0]}:${date.startTime[1]}\">\n            —\n            <label class=\"visually-hidden\" for=\"event-end-time-1\">\n              To\n            </label>\n            <input class=\"event__input  event__input--time\" id=\"event-end-time-1\" type=\"text\" name=\"event-end-time\" value=\"${date.endDate.getDate()}/${date.endDate.getMonth()}/${date.endDate.getFullYear()} ${date.endTime[0]}:${date.endTime[0]}\">\n            `)[Math.floor(Math.random() * this._tripRoute.length)]}\n        </div>\n        <div class=\"event__field-group  event__field-group--price\">\n          <label class=\"event__label\" for=\"event-price-1\">\n            <span class=\"visually-hidden\">Price</span>\n            €\n          </label>\n            ${this._tripRoute.map((price) => `\n              <input class=\"event__input  event__input--price\" id=\"event-price-1\" type=\"text\" name=\"event-price\" value=\"${price.price}\">\n              `)[Math.floor(Math.random() * this._tripRoute.length)]}\n        </div>\n        <button class=\"event__save-btn  btn  btn--blue\" type=\"submit\">Save</button>\n        <button class=\"event__reset-btn\" type=\"reset\">Delete</button>\n        <input id=\"event-favorite-1\" class=\"event__favorite-checkbox  visually-hidden\" type=\"checkbox\" name=\"event-favorite\" checked=\"\">\n        <label class=\"event__favorite-btn\" for=\"event-favorite-1\">\n          <span class=\"visually-hidden\">Add to favorite</span>\n          <svg class=\"event__favorite-icon\" width=\"28\" height=\"28\" viewBox=\"0 0 28 28\">\n            <path d=\"M14 21l-8.22899 4.3262 1.57159-9.1631L.685209 9.67376 9.8855 8.33688 14 0l4.1145 8.33688 9.2003 1.33688-6.6574 6.48934 1.5716 9.1631L14 21z\"></path>\n          </svg>\n        </label>\n        <button class=\"event__rollup-btn\" type=\"button\">\n          <span class=\"visually-hidden\">Open event</span>\n        </button>\n      </header>\n      <section class=\"event__details\">\n        <section class=\"event__section  event__section--offers\">\n          <h3 class=\"event__section-title  event__section-title--offers\">Offers</h3>\n            <div class=\"event__available-offers\">\n              ${this._options.map((it) => `\n                <div class=\"event__offer-selector\">\n                  <input class=\"event__offer-checkbox  visually-hidden\" id=\"event-offer-${it.value}-1\" type=\"checkbox\" name=\"event-offer-${it.value}\" ${it.isChecked ? `checked` : ``}>\n                  <label class=\"event__offer-label\" for=\"event-offer-${it.value}-1\">\n                    <span class=\"event__offer-title\">${it.type}</span>\n                    +\n                    €&nbsp;<span class=\"event__offer-price\">${it.price}</span>\n                  </label>\n                </div>`).join(``)}\n            </div>\n        </section>\n        <section class=\"event__section  event__section--destination\">\n          <h3 class=\"event__section-title  event__section-title--destination\">Destination</h3>\n          <p class=\"event__destination-description\">${this._description}</p>\n    \n          <div class=\"event__photos-container\">\n            <div class=\"event__photos-tape\">\n             ${this._photos.map((photo) => `\n                <img class=\"event__photo\" src=\"${photo} + ${Math.random()}\" alt=\"Event photo\">\n              `).join(``)} \n             </div>\n          </div>\n        </section>\n      </section>\n    </form>`;\n  }\n}\n","import {AbstractComponent} from './abstract-component';\n\nexport class AddNewEvent extends AbstractComponent {\n  getTemplate() {\n    return `<form class=\"trip-events__item  event  event--edit\" action=\"#\" method=\"post\">\n      <header class=\"event__header\">\n        <div class=\"event__type-wrapper\">\n          <label class=\"event__type  event__type-btn\" for=\"event-type-toggle-1\">\n            <span class=\"visually-hidden\">Choose event type</span>\n            <img class=\"event__type-icon\" width=\"17\" height=\"17\" src=\"img/icons/flight.png\" alt=\"Event type icon\">\n          </label>\n          <input class=\"event__type-toggle  visually-hidden\" id=\"event-type-toggle-1\" type=\"checkbox\">\n\n          <div class=\"event__type-list\">\n            <fieldset class=\"event__type-group\">\n              <legend class=\"visually-hidden\">Transfer</legend>\n\n              <div class=\"event__type-item\">\n                <input id=\"event-type-taxi-1\" class=\"event__type-input  visually-hidden\" type=\"radio\" name=\"event-type\" value=\"taxi\">\n                <label class=\"event__type-label  event__type-label--taxi\" for=\"event-type-taxi-1\">Taxi</label>\n              </div>\n\n              <div class=\"event__type-item\">\n                <input id=\"event-type-bus-1\" class=\"event__type-input  visually-hidden\" type=\"radio\" name=\"event-type\" value=\"bus\">\n                <label class=\"event__type-label  event__type-label--bus\" for=\"event-type-bus-1\">Bus</label>\n              </div>\n\n              <div class=\"event__type-item\">\n                <input id=\"event-type-train-1\" class=\"event__type-input  visually-hidden\" type=\"radio\" name=\"event-type\" value=\"train\">\n                <label class=\"event__type-label  event__type-label--train\" for=\"event-type-train-1\">Train</label>\n              </div>\n\n              <div class=\"event__type-item\">\n                <input id=\"event-type-ship-1\" class=\"event__type-input  visually-hidden\" type=\"radio\" name=\"event-type\" value=\"ship\">\n                <label class=\"event__type-label  event__type-label--ship\" for=\"event-type-ship-1\">Ship</label>\n              </div>\n\n              <div class=\"event__type-item\">\n                <input id=\"event-type-transport-1\" class=\"event__type-input  visually-hidden\" type=\"radio\" name=\"event-type\" value=\"transport\">\n                <label class=\"event__type-label  event__type-label--transport\" for=\"event-type-transport-1\">Transport</label>\n              </div>\n\n              <div class=\"event__type-item\">\n                <input id=\"event-type-drive-1\" class=\"event__type-input  visually-hidden\" type=\"radio\" name=\"event-type\" value=\"drive\">\n                <label class=\"event__type-label  event__type-label--drive\" for=\"event-type-drive-1\">Drive</label>\n              </div>\n\n              <div class=\"event__type-item\">\n                <input id=\"event-type-flight-1\" class=\"event__type-input  visually-hidden\" type=\"radio\" name=\"event-type\" value=\"flight\" checked=\"\">\n                <label class=\"event__type-label  event__type-label--flight\" for=\"event-type-flight-1\">Flight</label>\n              </div>\n            </fieldset>\n\n            <fieldset class=\"event__type-group\">\n              <legend class=\"visually-hidden\">Activity</legend>\n\n              <div class=\"event__type-item\">\n                <input id=\"event-type-check-in-1\" class=\"event__type-input  visually-hidden\" type=\"radio\" name=\"event-type\" value=\"check-in\">\n                <label class=\"event__type-label  event__type-label--check-in\" for=\"event-type-check-in-1\">Check-in</label>\n              </div>\n\n              <div class=\"event__type-item\">\n                <input id=\"event-type-sightseeing-1\" class=\"event__type-input  visually-hidden\" type=\"radio\" name=\"event-type\" value=\"sightseeing\">\n                <label class=\"event__type-label  event__type-label--sightseeing\" for=\"event-type-sightseeing-1\">Sightseeing</label>\n              </div>\n\n              <div class=\"event__type-item\">\n                <input id=\"event-type-restaurant-1\" class=\"event__type-input  visually-hidden\" type=\"radio\" name=\"event-type\" value=\"restaurant\">\n                <label class=\"event__type-label  event__type-label--restaurant\" for=\"event-type-restaurant-1\">Restaurant</label>\n              </div>\n            </fieldset>\n          </div>\n        </div>\n\n        <div class=\"event__field-group  event__field-group--destination\">\n          <label class=\"event__label  event__type-output\" for=\"event-destination-1\">\n            Sightseeing at\n          </label>\n          <input class=\"event__input  event__input--destination\" id=\"event-destination-1\" type=\"text\" name=\"event-destination\" value=\"\" list=\"destination-list-1\">\n          <datalist id=\"destination-list-1\">\n            <option value=\"Amsterdam\"></option>\n            <option value=\"Geneva\"></option>\n            <option value=\"Chamonix\"></option>\n            <option value=\"Saint Petersburg\"></option>\n          </datalist>\n        </div>\n\n        <div class=\"event__field-group  event__field-group--time\">\n          <label class=\"visually-hidden\" for=\"event-start-time-1\">\n            From\n          </label>\n          <input class=\"event__input  event__input--time\" id=\"event-start-time-1\" type=\"text\" name=\"event-start-time\" value=\"18/03/19 00:00\">\n          —\n          <label class=\"visually-hidden\" for=\"event-end-time-1\">\n            To\n          </label>\n          <input class=\"event__input  event__input--time\" id=\"event-end-time-1\" type=\"text\" name=\"event-end-time\" value=\"18/03/19 00:00\">\n        </div>\n\n        <div class=\"event__field-group  event__field-group--price\">\n          <label class=\"event__label\" for=\"event-price-1\">\n            <span class=\"visually-hidden\">Price</span>\n            €\n          </label>\n          <input class=\"event__input  event__input--price\" id=\"event-price-1\" type=\"text\" name=\"event-price\" value=\"\">\n        </div>\n\n        <button class=\"event__save-btn  btn  btn--blue\" type=\"submit\">Save</button>\n        <button class=\"event__reset-btn\" type=\"reset\">Cancel</button>\n      </header>\n    </form>`;\n  }\n}\n","import {AbstractComponent} from './abstract-component';\n\nexport class CreateCardRoute extends AbstractComponent {\n  constructor({cityStart, cityTransfer, cityEnd, startMonth, startDate, endDate}) {\n    super();\n    this._cityStart = cityStart;\n    this._cityTransfer = cityTransfer;\n    this._cityEnd = cityEnd;\n    this._startMonth = startMonth;\n    this._startDate = startDate;\n    this._endDate = endDate;\n  }\n\n  getTemplate() {\n    return `<div class=\"trip-info__main\">\n      <h1 class=\"trip-info__title\">${this._cityStart} &mdash; ${this._cityTransfer !== `` ? `...&mdash;` : ``}   ${this._cityEnd}</h1>\n      <p class=\"trip-info__dates\">${this._startMonth} ${this._startDate.getUTCDate()}&nbsp;—&nbsp;${this._endDate.getUTCDate()}</p>\n    </div>`;\n  }\n}\n\n\n","import {AbstractComponent} from './abstract-component';\n\nexport class Card extends AbstractComponent {\n  constructor({tripRoute, options}) {\n    super();\n    this._tripRoute = tripRoute;\n    this._options = options;\n  }\n\n  getTemplate() {\n    return `<li class=\"trip-events__item\">\n      ${this._tripRoute.map((trip) => `\n        <div class=\"event\">\n          <div class=\"event__type\">\n            <img class=\"event__type-icon\" width=\"42\" height=\"42\" src=\"${trip.icon}\" alt=\"Event type icon\">\n          </div>\n          <h3 class=\"event__title\">${trip.type} ${trip.point}</h3>\n          <div class=\"event__schedule\">\n            <p class=\"event__time\">\n              <time class=\"event__start-time\" datetime=\"2019-03-18T10:30\">${trip.startTime[0]}:${trip.startTime[1]}</time>\n              —\n              <time class=\"event__end-time\" datetime=\"2019-03-18T11:00\">${trip.endTime[0]}:${(trip.endTime[1])}</time>\n            </p>\n            <p class=\"event__duration\">${trip.durationHours}H ${trip.durationMinutes}M</p>\n          </div>\n          <p class=\"event__price\">\n            €&nbsp;<span class=\"event__price-value\">${trip.price}</span>\n          </p>\n          <h4 class=\"visually-hidden\">Offers:</h4>\n          <ul class=\"event__selected-offers\">\n          ${this._options.map((option) => ` \n            <li class=\"event__offer\">\n              <span class=\"event__offer-title\">${option.type}</span>\n              +\n              €&nbsp;<span class=\"event__offer-price\">${option.price}</span>\n             </li>\n             `)[Math.floor(Math.random() * this._options.length)]}\n          </ul>\n          <button class=\"event__rollup-btn\" type=\"button\">\n            <span class=\"visually-hidden\">Open event</span>\n          </button>\n        </div>\n        `)[Math.floor(Math.random() * this._tripRoute.length)]}\n  </li>`;\n  }\n}\n\n","import {AbstractComponent} from './abstract-component';\n\nexport class CreateControls extends AbstractComponent {\n  constructor(controls) {\n    super();\n    this._controls = controls;\n  }\n\n  getTemplate() {\n    return `<nav class=\"trip-controls__trip-tabs  trip-tabs\">\n      ${this._controls.map((control) => `\n        <a class=\"trip-tabs__btn  trip-tabs__btn--active\" href=\"#\">${control}</a>\n      `).join(``)}\n    </nav>`;\n  }\n}\n","import {AbstractComponent} from './abstract-component';\n\nexport class CreateFilters extends AbstractComponent {\n  constructor(filters) {\n    super();\n    this._filters = filters;\n  }\n\n  getTemplate() {\n    return `<form class=\"trip-filters\" action=\"#\" method=\"get\">${this._filters.map((filter) => `\n      <div class=\"trip-filters__filter\">\n        <input id=\"filter-${filter.filter}\" class=\"trip-filters__filter-input  visually-hidden\" type=\"radio\" name=\"trip-filter\" value=\"${filter.filter.toLowerCase()}\" ${filter.isChecked ? `checked` : ``}>\n        <label class=\"trip-filters__filter-label\" for=\"filter-${filter.filter}\">${filter.filter}</label>\n      </div>\n      `).join(``)}\n  </form>`;\n  }\n}\n","import {AbstractComponent} from './abstract-component';\n\nexport class CreateSorting extends AbstractComponent {\n  constructor(sorting) {\n    super();\n    this._sorting = sorting;\n  }\n\n  getTemplate() {\n    return `<form class=\"trip-events__trip-sort  trip-sort\" action=\"#\" method=\"get\">\n      <span class=\"trip-sort__item  trip-sort__item--day\">Day</span>\n      ${this._sorting.map((sort) => `\n        <div class=\"trip-sort__item  trip-sort__item--${sort.sorting.toLowerCase()}\">\n          <input id=\"sort-${sort.sorting}\" class=\"trip-sort__input  visually-hidden\" type=\"radio\" name=\"trip-sort\" value=\"sort-${sort.sorting}\" ${sort.isChecked ? `checked` : ``}>\n          <label class=\"trip-sort__btn\" for=\"sort-${sort.sorting}\">${sort.sorting}\n          <svg class=\"trip-sort__direction-icon\" width=\"8\" height=\"10\" viewBox=\"0 0 8 10\">\n              <path d=\"M2.888 4.852V9.694H5.588V4.852L7.91 5.068L4.238 0.00999987L0.548 5.068L2.888 4.852Z\"/>\n            </svg>\n          </label>\n        </div>`).join(``)}\n      <span class=\"trip-sort__item  trip-sort__item--offers\">Offers</span>\n  </form>`;\n  }\n}\n","import {AbstractComponent} from './abstract-component';\n\nexport class TripCost extends AbstractComponent {\n  constructor(cost) {\n    super();\n    this._cost = cost;\n  }\n\n  getTemplate() {\n    return `<p class=\"trip-info__cost\">\n      Total: €&nbsp;<span class=\"trip-info__cost-value\">${this._cost}</span>\n    </p>`;\n  }\n}\n","import {AbstractComponent} from './abstract-component';\n\nexport class TripEventsContainer extends AbstractComponent {\n  getTemplate() {\n    return `<section class=\"trip-days\"></section>`;\n  }\n}\n","import {AbstractComponent} from './abstract-component';\n\nexport class TripEventsList extends AbstractComponent {\n  getTemplate() {\n    return `<ul class=\"trip-events__list\"></ul>`;\n  }\n}\n","const tripInfo = document.querySelector(`.trip-main__trip-info`);\nconst tripControls = document.querySelector(`.trip-main__trip-controls`);\nconst tripEvents = document.querySelector(`.trip-events`);\nconst tripEventsList = document.querySelector(`.trip-events__list`);\n\n\nconst CARD_COUNT = 3;\n\nconst partialPath = `img/icons/`;\nconst cities = [`Helsinki`, `Stockholm`, `Amsterdam`, `Airport`];\nconst sightseeings = [`Natural History Museum`, `Theater`, `Park`];\nconst activity = [`Sightseeing`, `Restaurant`, `Check-in`];\nconst transfer = [`Taxi`, `Bus`, `Train`, `Ship`, `Transport`, `Drive`, `Flight`];\nconst monthNames = [`January`, `February`, `March`, `April`, `May`, `June`, `July`, `August`, `September`, `October`, `November`, `December`];\nconst startMonth = new Date(2020, 5, 1, 8, 30, 0, 0).getMonth();\nconst startDate = new Date(2020, 5, 1, 8, 30, 0, 0);\nconst endDate = new Date(2020, 5, 8, 0, 30, 0, 0);\nconst startTimeHours = new Date(2020, 5, 1, 8, 30, 0, 0).getHours();\nconst startTimeMinutes = new Date(2020, 5, 1, 8, 30, 0, 0).getMinutes();\nconst photosArray = new Array(5).fill(``);\n\nexport {\n  tripInfo,\n  tripControls,\n  tripEvents,\n  tripEventsList,\n  CARD_COUNT,\n  partialPath,\n  cities,\n  sightseeings,\n  activity,\n  transfer,\n  startMonth,\n  startDate,\n  endDate,\n  startTimeHours,\n  startTimeMinutes,\n  monthNames,\n  photosArray,\n};\n","import {TripEventsContainer} from '../components/trip-events-container';\nimport {TripEventsList} from '../components/trip-events-list';\nimport {EventOption, replaceElement, Position, render} from '../utils';\nimport {Card} from '../components/cards';\nimport {CardEdit} from '../components/card-edit';\n\nexport class CardsBoardController {\n  constructor(container, cards) {\n    this._container = container;\n    this._cards = cards;\n    this._eventsContainer = new TripEventsContainer();\n    this._cardsList = new TripEventsList();\n  }\n\n  init() {\n    render(this._container, this._eventsContainer.getElement(), Position.BEFOREEND);\n    render(this._eventsContainer.getElement(), this._cardsList.getElement(), Position.BEFOREEND);\n    this._cards.forEach((cardMock) => this._renderCards(cardMock));\n  }\n\n  _renderCards(card) {\n    const cardComponent = new Card(card);\n    const cardEditComponent = new CardEdit(card);\n\n    const onEscKeyDown = (evt) => {\n      if (evt.key === `Escape` || evt.key === `Esc`) {\n        replaceElement(this._cardsList, cardComponent, cardEditComponent, EventOption.removeEvent, onEscKeyDown);\n      }\n    };\n\n    cardComponent.getElement()\n      .querySelector(`.event__rollup-btn`)\n      .addEventListener(`click`, () => {\n        replaceElement(this._cardsList, cardEditComponent, cardComponent, EventOption.addEvent, onEscKeyDown);\n      });\n\n    cardEditComponent.getElement()\n      .querySelector(`.event__input--destination`)\n      .addEventListener(`focus`, () => {\n        document.removeEventListener(`keydown`, onEscKeyDown);\n      });\n\n    cardEditComponent.getElement()\n      .querySelector(`.event__input--destination`)\n      .addEventListener(`blur`, () => {\n        document.addEventListener(`keydown`, onEscKeyDown);\n      });\n\n    cardEditComponent.getElement()\n      .querySelector(`.event__rollup-btn`)\n      .addEventListener(`click`, () => {\n        replaceElement(this._cardsList, cardComponent, cardEditComponent, EventOption.removeEvent, onEscKeyDown);\n      });\n\n    this._cardsList.getElement()\n      .addEventListener(`submit`, (evt) => {\n        if (evt.target === cardEditComponent.getElement()) {\n          evt.preventDefault();\n          replaceElement(this._cardsList, cardComponent, cardEditComponent, EventOption.removeEvent, onEscKeyDown);\n        }\n      }, true);\n\n    render(this._cardsList.getElement(), cardComponent.getElement(), Position.BEFOREEND);\n  }\n}\n","import {tripInfo, tripControls, tripEvents, tripEventsList, CARD_COUNT} from './constants'\nimport {render, Position} from './utils';\n\nimport {card} from './mocks/card';\nimport {filters} from './mocks/filters';\nimport {getCardRoute} from './mocks/card-route';\nimport {controls} from './mocks/controls';\nimport {sorting} from './mocks/sorting';\nimport {tripCost} from './mocks/trip-cost';\n\nimport {CreateCardRoute} from './components/card-route';\nimport {CreateControls} from './components/controls';\nimport {CreateFilters} from './components/filters';\nimport {CreateSorting} from './components/sorting';\nimport {TripCost} from './components/trip-cost';\nimport {CardsBoardController} from './controllers/cards-board';\nimport {AddNewEvent} from './components/card-new';\n\n\nconst renderRoute = (route) => {\n  const cardRoute = new CreateCardRoute(route);\n  render(tripInfo, cardRoute.getElement(), Position.AFTERBEGIN);\n};\n\nconst renderControls = (controls) => {\n  const controlRoute = new CreateControls(controls);\n  render(tripControls, controlRoute.getElement(), Position.AFTERBEGIN);\n};\n\nconst renderFilters = (filters) => {\n  const filtersRoute = new CreateFilters(filters);\n  render(tripControls, filtersRoute.getElement(), Position.BEFOREEND);\n};\n\nconst renderSorting = (sorting) => {\n  const sortingRoute = new CreateSorting(sorting);\n  render(tripEvents, sortingRoute.getElement(), Position.AFTERBEGIN);\n};\n\nconst renderCosts = (costs) => {\n  const costItems = new TripCost(costs);\n  render(tripInfo, costItems.getElement(), Position.BEFOREEND)\n};\n\nconst renderCardAdd = () => {\n  const cardAdd = new AddNewEvent();\n  render(tripEvents, cardAdd.getElement(), Position.AFTERBEGIN);\n};\n\nconst cardMocks = new Array(CARD_COUNT).fill(``).map(card);\n\nrenderRoute(getCardRoute());\nrenderControls(controls);\nrenderFilters(filters);\nrenderSorting(sorting);\n\nconst cardsBoardController = new CardsBoardController(tripEventsList, cardMocks);\n\nconst renderCardTypes = () => {\n  if (cardMocks.length > 0) {\n    cardsBoardController.init();\n  } else {\n    renderCardAdd();\n  }\n};\n\nrenderCardTypes();\n\nconst price = document.querySelectorAll(`.event__price-value`);\nrenderCosts(tripCost(price));\n","import {getMonth} from '../utils';\nimport {startDate, endDate} from '../constants';\n\nexport const getCardRoute = () => ({\n  cityStart: [`Geneva`, `Chamonix`, `Amsterdam`, `Brussels`, `Stockholm`][Math.floor(Math.random() * 5)],\n  cityTransfer: [``, `Chamonix`, ``, `Brussels`, `Stockholm`][Math.floor(Math.random() * 5)],\n  cityEnd: [`Geneva`, `Chamonix`, `Amsterdam`, `Brussels`, `Stockholm`][Math.floor(Math.random() * 5)],\n  startMonth: getMonth(),\n  startDate,\n  endDate\n});\n","import {getDuration} from '../utils';\nimport {partialPath, cities, sightseeings, startTimeHours, startTimeMinutes, startDate, endDate, activity, transfer, photosArray} from '../constants';\n\nexport const card = () => ({\n  tripRoute: [\n    {\n      type: `Taxi`,\n      icon: partialPath + `taxi.png`,\n      point: `Airport`,\n      price: Math.floor(Math.random() * 50),\n      startTime: [startTimeHours, startTimeMinutes],\n      endTime: [startTimeHours + 1, startTimeMinutes + 30],\n      durationHours: getDuration(startTimeHours, startTimeHours + 1),\n      durationMinutes: getDuration(startTimeMinutes, startTimeMinutes + 30),\n      startDate, endDate\n    },\n    {\n      type: `Flight`,\n      icon: partialPath + `flight.png`,\n      point: cities[Math.floor(Math.random() * cities.length)],\n      price: Math.floor(Math.random() * 500),\n      startTime: [startTimeHours + 1, startTimeMinutes + 30],\n      endTime: [startTimeHours + 3, startTimeMinutes + 30],\n      durationHours: getDuration(startTimeHours + 1, startTimeHours + 3),\n      durationMinutes: getDuration(startTimeMinutes + 30, startTimeMinutes + 30),\n      startDate, endDate\n    },\n    {\n      type: `Drive`,\n      icon: partialPath + `bus.png`,\n      point: cities[Math.floor(Math.random() * cities.length)],\n      price: Math.floor(Math.random() * 50),\n      startTime: [startTimeHours + 3, startTimeMinutes + 30],\n      endTime: [startTimeHours + 3, startTimeMinutes + 30],\n      durationHours: getDuration(startTimeHours + 1, startTimeHours + 3),\n      durationMinutes: getDuration(startTimeMinutes + 30, startTimeMinutes + 30),\n      startDate, endDate\n    },\n    {\n      type: `Check in`,\n      icon: partialPath + `check-in.png`,\n      point: `hotel`,\n      price: Math.floor(Math.random() * 300),\n      startTime: [startTimeHours + 3, startTimeMinutes + 30],\n      endTime: [startTimeHours + 48, startTimeMinutes + 30],\n      durationHours: getDuration(startTimeHours + 3, startTimeHours + 48),\n      durationMinutes: getDuration(startTimeMinutes + 30, startTimeMinutes + 30),\n      startDate, endDate\n    },\n    {\n      type: `Sightseeing`,\n      icon: partialPath + `sightseeing.png`,\n      point: sightseeings[Math.floor(Math.random() * sightseeings.length)],\n      price: Math.floor(Math.random() * 10),\n      startTime: [startTimeHours + 4, startTimeMinutes + 30],\n      endTime: [startTimeHours + 6, startTimeMinutes + 30],\n      durationHours: getDuration(startTimeHours + 1, startTimeHours + 3),\n      durationMinutes: getDuration(startTimeMinutes + 30, startTimeMinutes + 30),\n      startDate, endDate\n    },\n    {\n      type: `Restaurant`,\n      icon: partialPath + `restaurant.png`,\n      point: `hotel`,\n      price: Math.floor(Math.random() * 60),\n      startTime: [startTimeHours + 5, startTimeMinutes + 30],\n      endTime: [startTimeHours + 7, startTimeMinutes + 30],\n      durationHours: getDuration(startTimeHours + 1, startTimeHours + 3),\n      durationMinutes: getDuration(startTimeMinutes + 30, startTimeMinutes + 30),\n      startDate, endDate\n    },\n    {\n      type: `Ship`,\n      icon: partialPath + `ship.png`,\n      point: cities[Math.floor(Math.random() * cities.length)],\n      price: Math.floor(Math.random() * 40),\n      startTime: [startTimeHours + 6, startTimeMinutes + 30],\n      endTime: [startTimeHours + 8, startTimeMinutes + 30],\n      durationHours: getDuration(startTimeHours + 1, startTimeHours + 3),\n      durationMinutes: getDuration(startTimeMinutes + 30, startTimeMinutes + 30),\n      startDate, endDate\n    },\n    {\n      type: `Bus`,\n      icon: partialPath + `bus.png`,\n      point: sightseeings[Math.floor(Math.random() * sightseeings.length)],\n      price: Math.floor(Math.random() * 50),\n      startTime: [startTimeHours + 3, startTimeMinutes + 30],\n      endTime: [startTimeHours + 3, startTimeMinutes + 30],\n      durationHours: getDuration(startTimeHours + 3, startTimeHours + 3),\n      durationMinutes: getDuration(startTimeMinutes + 30, startTimeMinutes + 30),\n      startDate, endDate\n    },\n    {\n      type: `Train`,\n      icon: partialPath + `train.png`,\n      point: cities[Math.floor(Math.random() * cities.length)],\n      price: Math.floor(Math.random() * 30),\n      startTime: [startTimeHours + 1, startTimeMinutes + 30],\n      endTime: [startTimeHours + 3, startTimeMinutes + 30],\n      durationHours: getDuration(startTimeHours + 1, startTimeHours + 3),\n      durationMinutes: getDuration(startTimeMinutes + 30, startTimeMinutes + 30),\n      startDate, endDate\n    }\n\n  ],\n\n  activity,\n  transfer,\n\n\n  options: [\n    {\n      type: `Add luggage`,\n      value: `luggage`,\n      price: Math.floor(Math.random() * 250),\n      isChecked: Boolean(Math.round(Math.random()))\n    },\n    {\n      type: `Switch to comfort class`,\n      value: `class`,\n      price: Math.floor(Math.random() * 250),\n      isChecked: Boolean(Math.round(Math.random()))\n    },\n    {\n      type: `Add meal`,\n      value: `meal`,\n      price: Math.floor(Math.random() * 5),\n      isChecked: Boolean(Math.round(Math.random()))\n    },\n    {\n      type: `Choose seats`,\n      value: `seats`,\n      price: Math.floor(Math.random() * 30),\n      isChecked: Boolean(Math.round(Math.random()))\n    }\n  ],\n\n\n  photos: photosArray.map(() => `http://picsum.photos/300/150?r=`),\n\n  description: [\n    `Lorem ipsum dolor sit amet, consectetur adipiscing elit. Cras aliquet varius magna, non porta ligula feugiat eget.`,\n    `Fusce tristique felis at fermentum pharetra.`,\n    `Aliquam id orci ut lectus varius viverra.`,\n    `Nullam nunc ex, convallis sed finibus eget, sollicitudin eget ante.`,\n    `Phasellus eros mauris, condimentum sed nibh vitae, sodales efficitur ipsum. Sed blandit, eros vel aliquam faucibus, purus ex euismod diam, eu luctus nunc ante ut dui.`,\n    `Sed sed nisi sed augue convallis suscipit in sed felis.`,\n    `Aliquam erat volutpat.`,\n    `unc fermentum tortor ac porta dapibus.`,\n    `In rutrum ac purus sit amet tempus.`\n  ][Math.floor(Math.random() * 3)],\n});\n","export const controls = [`Table`, `Stats`];\n\n","export const filters = [\n  {\n    filter: `Everything`,\n    isChecked: Boolean(Math.round(Math.random()))\n  },\n  {\n    filter: `Future`,\n    isChecked: Boolean(Math.round(Math.random()))\n\n  },\n  {\n    filter: `Past`,\n    isChecked: Boolean(Math.round(Math.random()))\n\n  }\n];\n","export const sorting = [\n  {\n    sorting: `Event`,\n    isChecked: Boolean(Math.round(Math.random()))\n  },\n  {\n    sorting: `Time`,\n    isChecked: Boolean(Math.round(Math.random()))\n  },\n  {\n    sorting: `Price`,\n    isChecked: Boolean(Math.round(Math.random()))\n  }\n];\n","export const tripCost = (price) => {\n  let totalPrice = 0;\n  price.forEach((item) => {\n    totalPrice += +item.innerHTML;\n  });\n\n  return totalPrice;\n};\n","import {monthNames} from './constants';\nimport {startMonth} from './constants';\n\nconst getDuration = (start, end) => end - start;\n\nconst getMonth = () => monthNames[startMonth];\n\nconst EventOption = {\n  addEvent: `addEventListener`,\n  removeEvent: `removeEventListener`\n};\n\nconst replaceElement = (container, replacedElem, replaceElem, option, func) => {\n  switch (option) {\n    case EventOption.addEvent:\n      container.getElement().replaceChild(replacedElem.getElement(), replaceElem.getElement());\n      document.addEventListener(`keydown`, func);\n      break;\n    case EventOption.removeEvent:\n      container.getElement().replaceChild(replacedElem.getElement(), replaceElem.getElement());\n      document.removeEventListener(`keydown`, func);\n      break;\n  }\n};\n\nconst Position = {\n  AFTERBEGIN: `afterbegin`,\n  BEFOREEND: `beforeend`\n};\n\nconst createElement = (template) => {\n  const newElement = document.createElement(`div`);\n  newElement.innerHTML = template;\n  return newElement.firstChild;\n};\n\n// Рендер и анрендер для компонент\nconst render = (container, element, place) => {\n  switch (place) {\n    case Position.AFTERBEGIN:\n      container.prepend(element);\n      break;\n    case Position.BEFOREEND:\n      container.append(element);\n      break;\n  }\n};\n\nconst unrender = (element) => {\n  if (element) {\n    element.remove();\n  }\n};\n\nexport {\n  getDuration,\n  getMonth,\n  EventOption,\n  replaceElement,\n  Position,\n  createElement,\n  render,\n  unrender\n}\n"],"sourceRoot":""}